//using dfs see if path between 2 vertices exist or not
#include<iostream>
using namespace std;
bool path(int** mat,int n,int s,int e,bool* visit)
{
	visit[s]=true;
	if(s==e)
		return true;
	for(int i=0;i<n;i++)
	{
		if(s==i)
			continue;
		if(mat[s][i]==1)
		{
			if(mat[i][e]==1)
				return true;
			if((visit[i]==false)
				if(path(mat,n,i,e,visit))
					return true;
		}
	}
	return false;
}
int main()
{
	int v,e;
	int a,b;
	int sv,ev;
	cout<<"enter the no of vertices:";
	cin>>v;
	cout<<"enter the no of edges:";
	cin>>e;
	int** adjmat=new int*[v];
	for(int i=0;i<v;i++)
	{
		adjmat[i]=new int[v];
		for(int j=0;j<v;j++)
			adjmat[i][j]=0;
	}
	cout<<"enter the edges:"<<endl;
	for(int i=0;i<e;i++)
	{
		cin>>a>>b;
		adjmat[a][b]=1;
		adjmat[b][a]=1;
	}
	bool* visit=new bool[v];
	for(int i=0;i<v;i++)
		visit[i]=false;
	cout<<"enter the start and end vertex for path:"<<endl;
	cin>>sv>>ev;
	bool ans=path(adjmat,v,sv,ev,visit);
	if(ans==true)
		cout<<"path exists"<<endl;
	else
		cout<<"path does not exist"<<endl;
	for(int i=0;i<v;i++)
		delete[] adjmat[i];
	delete[] adjmat;
	delete[] visit;	
	return 0;
}
